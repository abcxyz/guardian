# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Workflow for IAM drift detection
# Approach:
#   Run on schedule or manual
#   Execute drift script
#   If drift, create issue

name: 'guardian_detect_iam_drift'
description: |-
  Use this action to detect changes to your IAM settings in your GCP organization, folders, and projects.

inputs:
  organization_id:
    description: 'The ID of the GCP organization to detect IAM drift on.'
    required: true
  gcs_bucket_label:
    description: 'The label to use to discover GCS buckets used as terraform backends in your organization. Format "labels:{label}={value}"'
    default: 'labels:terraform'
    required: false
  issue_label:
    description: 'The label to use on the created github issue. This will be used to discover previously created issues and manage them.'
    default: 'guardian-iam-drift'
    required: false

runs:
  using: 'composite'
  steps:
    - uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1
      with:
        version: '>= 416.0.0'
        install_components: 'beta'

    - name: 'Run diff'
      id: 'run_diff'
      shell: 'bash'
      env:
        ORGANIZATION_ID: '${{ inputs.organization_id }}'
        GCS_BUCKET_LABEL: '${{ inputs.gcs_bucket_label }}'
      run: |
        diff_snippet="$(go run ./cmd/guardian detect-iam-drift --organization-id="$ORGANIZATION_ID" --gcs-bucket-query="$GCS_BUCKET_LABEL")"
        if [[ "${diff_snippet}" != "" ]]; then
          diff_detected="TRUE"
        else
          diff_detected="FALSE"
        fi

        # We write to a file since the max character limit of the ENV variable is quite low.
        TMPFILE_DIFF=$(mktemp /tmp/XXXXX.txt)
        echo "$diff_snippet" >> $TMPFILE_DIFF
        # We output it so we can link the user to the full diff in the logs.
        echo "$diff_snippet"

        echo "diff_detected=${diff_detected}" >> "$GITHUB_OUTPUT"
        echo "diff_file=${TMPFILE_DIFF}" >> $GITHUB_OUTPUT

    - uses: 'actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce' # ratchet:actions/upload-artifact@v3
      if: '${{steps.run_diff.outputs.diff_detected == ''TRUE''}}'
      with:
        name: 'iam-drift'
        path: '${{ steps.run_diff.outputs.diff_file }}'

    - uses: 'actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410' # ratchet:actions/github-script@v6
      id: 'get_previous_issue'
      if: '${{steps.run_diff.outputs.diff_detected == ''TRUE''}}'
      env:
        ISSUE_LABEL: '${{ inputs.issue_label }}'
      with:
        result-encoding: 'string'
        retries: '3'
        script: |
          const { ISSUE_LABEL } = process.env;
          const data = (await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [ISSUE_LABEL],
            state: 'all',
          })).data[0];
          if (data) {
            return data.number;
          }
          return "";

    - uses: 'actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410' # ratchet:actions/github-script@v6
      id: 'create_issue'
      if: '${{steps.run_diff.outputs.diff_detected == ''TRUE''}}'
      env:
        ISSUE_LABEL: '${{ inputs.issue_label }}'
        DIFF_FILE: '${{ steps.run_diff.outputs.diff_file }}'
        WORKFLOW_RUN_URL: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}'
      with:
        retries: '3'
        script: |
          const { ISSUE_LABEL, DIFF_FILE, WORKFLOW_RUN_URL } = process.env;
          const fs = require('fs');
          const diff_content = fs.readFileSync(DIFF_FILE, 'utf8');
          const diff_100_lines = diff_content.split('\n').slice(0, 100).join("\n");
          const was_shortened = diff_content !== diff_100_lines;
          const shortened_msg = was_shortened ? '...' : '';
          const issue_body = `We've detected a drift between your submitted IAM policies and actual
          IAM policies.

          See the logs for the full details: ${WORKFLOW_RUN_URL}

          ${diff_100_lines}
          ${shortened_msg}

          Please determine which parts are correct, and submit updated
          terraform config and/or remove the extra policies.

          Re-run this manually once complete to verify all diffs are properly resolved.`;

          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: [ISSUE_LABEL],
            title: 'IAM drift detected',
            body: issue_body,
          });

    - uses: 'actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410' # ratchet:actions/github-script@v6
      id: 'maybe-close-previous-issue'
      if: '${{ steps.get_previous_issue.outputs.result != '''' && steps.run_diff.outputs.diff_detected == ''TRUE'' }}'
      env:
        PREVIOUS_ISSUE_NUMBER: '${{ steps.get_previous_issue.outputs.result }}'
      with:
        retries: '3'
        script: |
          const { PREVIOUS_ISSUE_NUMBER } = process.env;
          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: PREVIOUS_ISSUE_NUMBER,
            state: 'closed',
          });
