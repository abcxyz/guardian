# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'test_guardian_plan'

on:
  # pull_request_target: # removed pull_request_target to allow for testing of guardian within the guardian repository
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
      - 'reopened'
    branches:
      - 'main'

permissions:
  contents: 'read'
  id-token: 'write'
  pull-requests: 'write'

# only one plan, per pr should run at a time
concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.number }}-${{ github.head_ref || github.ref }}'

env:
  REPO_OWNER: '${{ github.repository_owner }}'
  REPO_NAME: '${{ github.event.repository.name }}'
  PR_NUMBER: '${{ github.event.number }}'
  # GUARDIAN_LOG_MODE: 'development'
  # GUARDIAN_LOG_LEVEL: 'debug'

jobs:
  init:
    runs-on: 'ubuntu-latest'
    outputs:
      directories: '${{ steps.init.outputs.directories }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9' # ratchet:actions/checkout@v3
        with:
          fetch-depth: 0 # get everything so we can use git diff

      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: 'Install Guardian CLI'
        shell: 'bash'
        run: 'go install github.com/abcxyz/guardian/cmd/guardian@${{ github.event.pull_request.head.sha }}'

      - name: 'Guardian Plan Init'
        id: 'init'
        env:
          GITHUB_TOKEN: '${{ github.token }}'
          TERRAFORM_DIRECTORY: 'terraform'
          HEAD_REF: 'origin/${{ github.event.pull_request.head.ref }}'
          BASE_REF: 'origin/${{ github.event.pull_request.base.ref }}'
        run: |-
          DIRS=$(guardian init \
            -github-owner="${REPO_OWNER}" \
            -github-repo="${REPO_NAME}" \
            -pull-request-number="${PR_NUMBER}" \
            -source-ref="${HEAD_REF}" \
            -dest-ref="${BASE_REF}" \
            -format=json \
            -delete-outdated-plan-comments \
            "${TERRAFORM_DIRECTORY}")

          echo "Guardian Dirs: ${DIRS}"

          echo "directories=${DIRS}" >> $GITHUB_OUTPUT

  plan:
    if: |
      needs.init.outputs.directories != '[]'
    needs:
      - 'init'
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.directories) }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9' # ratchet:actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.head.ref }}'

      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '1.20'

      - name: 'Install Guardian CLI'
        shell: 'bash'
        run: 'go install github.com/abcxyz/guardian/cmd/guardian@${{ github.event.pull_request.head.sha }}'

      - name: 'Setup Terraform'
        uses: 'abcxyz/secure-setup-terraform@78e3f2fdfb7ebf59ce42141f6dd93bdd65bf04ed' # ratchet:abcxyz/secure-setup-terraform@v0.2.5
        with:
          terraform_version: '1.3.6'
          terraform_module_location: '${{ matrix.working_directory }}'
          terraform_lockfile_location: '${{ matrix.working_directory }}'
          terraform_wrapper: false

      - name: 'Mint Token'
        id: 'mint-token'
        uses: 'abcxyz/github-token-minter/.github/actions/mint-token@c6ea9b91e3e1df75a6e86dad8e5b0a0a45b42fec'
        with:
          wif_provider: '${{ vars.TOKEN_MINTER_WIF_PROVIDER }}'
          wif_service_account: '${{ vars.TOKEN_MINTER_WIF_SERVICE_ACCOUNT }}'
          service_audience: '${{ vars.TOKEN_MINTER_SERVICE_AUDIENCE }}'
          service_url: '${{ vars.TOKEN_MINTER_SERVICE_URL }}'
          requested_permissions: '{"repositories":["*"],"permissions":{"contents":"read"}}'

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ vars.GUARDIAN_WIF_PROVIDER }}'
          service_account: '${{ vars.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

      - name: 'Git Config'
        run: |-
          git config --global url."https://guardian-bot:${{ steps.mint-token.outputs.token }}@github.com".insteadOf "https://github.com"

      - name: 'Guardian Plan'
        env:
          GITHUB_TOKEN: '${{ github.token }}'
          WORKING_DIRECTORY: '${{ matrix.working_directory }}'
          BUCKET_NAME: '${{ vars.GUARDIAN_BUCKET_NAME }}'
        run: |-
          guardian plan run \
            -bucket-name="${BUCKET_NAME}" \
            -github-owner="${REPO_OWNER}" \
            -github-repo="${REPO_NAME}" \
            -pull-request-number="${PR_NUMBER}" \
            "${WORKING_DIRECTORY}"

  plan_success:
    if: '${{ always() }}'
    runs-on: 'ubuntu-latest'
    needs:
      - 'init'
      - 'plan'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9' # ratchet:actions/checkout@v3

      - name: 'Guardian Post Plan Status'
        uses: './.github/actions/plan-status'
        with:
          context: 'test'
          init_result: '${{ needs.init.result }}'
          plan_result: '${{ needs.plan.result }}'
