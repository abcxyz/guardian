# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'integration'

on:
  # pull_request_target: # removed pull_request_target to allow for testing of guardian within the guardian repository
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
      - 'reopened'
    branches:
      - 'main'

# default permission for all jobs should just be read
permissions:
  contents: 'read'

# only one plan, per pr should run at a time
concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.number }}-${{ github.head_ref || github.ref }}'

env:
  GITHUB_OWNER_NAME: '${{ github.event.repository.owner.login }}'
  GITHUB_REPO_NAME: '${{ github.event.repository.name }}'
  PULL_REQUEST_NUMBER: '${{ github.event.pull_request.number }}'
  GUARDIAN_WIF_PROVIDER: 'projects/1098665030124/locations/global/workloadIdentityPools/guardian-automation/providers/guardian-ci-i'
  GUARDIAN_WIF_SERVICE_ACCOUNT: 'guardian-automation-bot@ghg-guardian-ci-i-6ad437.iam.gserviceaccount.com'
  GUARDIAN_BUCKET_NAME: 'guardian-ci-i-guardian-state-c79e1f4759'
  GUARDIAN_TERRAFORM_VERSION: '1.7.1'

jobs:
  build:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'Setup Go'
        uses: 'actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe' # ratchet:actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: 'Build Guardian'
        uses: 'goreleaser/goreleaser-action@5fdedb94abba051217030cc86d4523cf3f02243d' # ratchet:goreleaser/goreleaser-action@v4
        with:
          distribution: 'goreleaser'
          version: 'v1.18.2'
          args: 'build --snapshot --single-target --clean --id guardian --output dist/guardian'

      - name: 'Upload Guardian Binary'
        uses: 'actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8' # ratchet:actions/upload-artifact@v4
        with:
          name: 'guardian'
          path: 'dist/guardian'
          retention-days: 1

  init:
    needs:
      - 'build'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      pull-requests: 'write'
    outputs:
      directories: '${{ steps.dirs.outputs.directories }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0 # get everything so we can use git diff
          ref: '${{ github.event.pull_request.head.sha }}'

      - name: 'Download Guardian'
        uses: 'actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935' # ratchet:actions/download-artifact@v4
        with:
          name: 'guardian'
          path: '${{ runner.temp }}/.guardian'

      - name: 'Setup Guardian'
        env:
          INSTALL_PATH: '${{ runner.temp }}/.guardian'
        run: |-
          chmod +x "${INSTALL_PATH}/guardian"
          echo "${INSTALL_PATH}" >> $GITHUB_PATH

      - name: 'Guardian Directories'
        id: 'dirs'
        shell: 'bash'
        env:
          SOURCE_REF: '${{ github.event.pull_request.base.sha }}'
          DEST_REF: '${{ github.event.pull_request.head.sha }}'
        run: |-
          DIRECTORIES=$(guardian entrypoints -format=json ./terraform)
          echo "entrypoints -> ${DIRECTORIES}"
          echo "directories=${DIRECTORIES}" >> $GITHUB_OUTPUT

      - name: 'Guardian Remove Previous Plan/Apply Comments'
        shell: 'bash'
        env:
          # used to delete old comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian workflows remove-guardian-comments \
            -github-owner="${GITHUB_OWNER_NAME}" \
            -github-repo="${GITHUB_REPO_NAME}" \
            -github-token="${REPO_TOKEN}" \
            -pull-request-number="${PULL_REQUEST_NUMBER}" \
            -for-command="plan" \
            -for-command="apply"

  plan:
    needs:
      - 'init'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.directories) }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.sha }}'

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@5a50e581162a13f4baa8916d01180d2acbc04363' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.GUARDIAN_WIF_PROVIDER }}'
          service_account: '${{ env.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup Terraform'
        uses: 'abcxyz/secure-setup-terraform@4d361110d3718e05b118be20051ba2855a2cc9e1' # ratchet:abcxyz/secure-setup-terraform@main
        with:
          terraform_version: '${{ env.GUARDIAN_TERRAFORM_VERSION }}'
          terraform_module_location: './${{ matrix.working_directory }}'
          terraform_lockfile_location: './${{ matrix.working_directory }}'
          protect_lockfile: true
          terraform_wrapper: false

      - name: 'Download Guardian'
        uses: 'actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935' # ratchet:actions/download-artifact@v4
        with:
          name: 'guardian'
          path: '${{ runner.temp }}/.guardian'

      - name: 'Setup Guardian'
        env:
          INSTALL_PATH: '${{ runner.temp }}/.guardian'
        run: |-
          chmod +x "${INSTALL_PATH}/guardian"
          echo "${INSTALL_PATH}" >> $GITHUB_PATH

      - name: 'Guardian Plan'
        shell: 'bash'
        env:
          DIRECTORY: '${{ matrix.working_directory }}'
          # used to create comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian plan run \
          -github-owner="${GITHUB_OWNER_NAME}" \
          -github-repo="${GITHUB_REPO_NAME}" \
          -github-token="${REPO_TOKEN}" \
          -pull-request-number="${PULL_REQUEST_NUMBER}" \
          -bucket-name="${GUARDIAN_BUCKET_NAME}" \
          "${DIRECTORY}"

  plan_success:
    needs:
      - 'init'
      - 'plan'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      pull-requests: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.sha }}'

      - name: 'Download Guardian'
        uses: 'actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935' # ratchet:actions/download-artifact@v4
        with:
          name: 'guardian'
          path: '${{ runner.temp }}/.guardian'

      - name: 'Setup Guardian'
        env:
          INSTALL_PATH: '${{ runner.temp }}/.guardian'
        run: |-
          chmod +x "${INSTALL_PATH}/guardian"
          echo "${INSTALL_PATH}" >> $GITHUB_PATH

      - name: 'Guardian Post Plan Status'
        shell: 'bash'
        env:
          # used to create comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian workflows plan-status-comment \
          -github-owner="${GITHUB_OWNER_NAME}" \
          -github-repo="${GITHUB_REPO_NAME}" \
          -github-token="${REPO_TOKEN}" \
          -pull-request-number="${PULL_REQUEST_NUMBER}" \
          -init-result="${{ needs.init.result }}" \
          -plan-result="${{ needs.plan.result }}"

  apply:
    needs:
      - 'init'
      - 'plan'
      - 'plan_success'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.directories) }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@5a50e581162a13f4baa8916d01180d2acbc04363' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.GUARDIAN_WIF_PROVIDER }}'
          service_account: '${{ env.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup Terraform'
        uses: 'abcxyz/secure-setup-terraform@4d361110d3718e05b118be20051ba2855a2cc9e1' # ratchet:abcxyz/secure-setup-terraform@main
        with:
          terraform_version: '${{ env.GUARDIAN_TERRAFORM_VERSION }}'
          terraform_module_location: './${{ matrix.working_directory }}'
          terraform_lockfile_location: './${{ matrix.working_directory }}'
          protect_lockfile: true
          terraform_wrapper: false

      - name: 'Download Guardian'
        uses: 'actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935' # ratchet:actions/download-artifact@v4
        with:
          name: 'guardian'
          path: '${{ runner.temp }}/.guardian'

      - name: 'Setup Guardian'
        env:
          INSTALL_PATH: '${{ runner.temp }}/.guardian'
        run: |-
          chmod +x "${INSTALL_PATH}/guardian"
          echo "${INSTALL_PATH}" >> $GITHUB_PATH

      - name: 'Guardian Apply'
        shell: 'bash'
        env:
          DIRECTORY: '${{ matrix.working_directory }}'
          COMMIT_SHA: '${{ github.sha }}'
          # used to create comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian apply run \
          -github-owner="${GITHUB_OWNER_NAME}" \
          -github-repo="${GITHUB_REPO_NAME}" \
          -github-token="${REPO_TOKEN}" \
          -pull-request-number="${PULL_REQUEST_NUMBER}" \
          -bucket-name="${GUARDIAN_BUCKET_NAME}" \
          "${DIRECTORY}"

      - name: 'Guardian Destroy'
        env:
          DIRECTORY: '${{ matrix.working_directory }}'
        shell: 'bash'
        run: |-
          guardian run \
          -terraform-command="destroy" \
          -terraform-args="-input=false,-auto-approve" \
          "${DIRECTORY}"
