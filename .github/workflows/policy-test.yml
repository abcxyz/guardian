# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'policy-test'

on:
  pull_request:
    types:
      - 'edited'
      - 'opened'
      - 'synchronize'
      - 'reopened'
    branches:
      - 'main'

jobs:
  build:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4

      - name: 'Setup Go'
        uses: 'actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7' # ratchet:actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: 'Build Guardian'
        uses: 'goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200' # ratchet:goreleaser/goreleaser-action@v6
        with:
          distribution: 'goreleaser'
          version: 'v1.18.2'
          args: 'build --snapshot --single-target --clean --id guardian --output dist/guardian'

      - name: 'Upload Guardian Binary'
        uses: 'actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808' # ratchet:actions/upload-artifact@v4
        with:
          name: 'guardian'
          path: 'dist/guardian'
          retention-days: 1

  init:
    needs:
      - 'build'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      pull-requests: 'write'

    outputs:
      modified: '${{ steps.entrypoints.outputs.modified }}'
      destroy: '${{ steps.entrypoints.outputs.destroy }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0 # get everything so we can use git diff

      - name: 'Download Guardian'
        uses: 'actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e' # ratchet:actions/download-artifact@v4
        with:
          name: 'guardian'
          path: '${{ runner.temp }}/.guardian'

      - name: 'Setup Guardian'
        env:
          INSTALL_PATH: '${{ runner.temp }}/.guardian'
        run: |-
          chmod +x "${INSTALL_PATH}/guardian"
          echo "${INSTALL_PATH}" >> $GITHUB_PATH

      - name: 'Guardian Directories'
        id: 'entrypoints'
        shell: 'bash'
        env:
          SOURCE_REF: '${{ github.event.pull_request.base.sha }}'
          DEST_REF: '${{ github.event.pull_request.head.sha }}'
        run: |-
          ENTRYPOINTS=$(guardian entrypoints -dir=./terraform -body-contents="GUARDIAN_DESTROY=terraform/project2")
          echo "entrypoints -> ${ENTRYPOINTS}"

          # parse the json response and create outputs for each type of directory
          echo "modified=$(echo $ENTRYPOINTS | jq -j -c '.modified')" >> $GITHUB_OUTPUT
          echo "destroy=$(echo $ENTRYPOINTS | jq -j -c '.destroy')" >> $GITHUB_OUTPUT

      - name: 'Guardian Remove Previous Plan/Apply Comments'
        shell: 'bash'
        env:
          # used to delete old comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian workflows remove-guardian-comments \
            -github-owner="${GITHUB_OWNER_NAME}" \
            -github-repo="${GITHUB_REPO_NAME}" \
            -github-token="${REPO_TOKEN}" \
            -pull-request-number="${PULL_REQUEST_NUMBER}" \
            -for-command="plan" \
            -for-command="apply"

  plan:
    name: 'plan (${{ matrix.working_directory }})'
    if: |
      needs.init.outputs.modified != '[]'
    needs:
      - 'init'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.modified) }}'
      steps:
        - name: 'Checkout'
          uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4

        - name: 'Authenticate to Google Cloud'
          uses: 'google-github-actions/auth@71fee32a0bb7e97b4d33d548e7d957010649d8fa' # ratchet:google-github-actions/auth@v2
          with:
            workload_identity_provider: '${{ env.GUARDIAN_WIF_PROVIDER }}'
            service_account: '${{ env.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

        - name: 'Setup Terraform'
          uses: 'abcxyz/secure-setup-terraform@fa5832adc577578c1dfb422d13722bdeb711cf29' # ratchet:abcxyz/secure-setup-terraform@main
          with:
            terraform_version: '${{ env.GUARDIAN_TERRAFORM_VERSION }}'
            terraform_module_location: './${{ matrix.working_directory }}'
            terraform_lockfile_location: './${{ matrix.working_directory }}'
            protect_lockfile: true
            terraform_wrapper: false

        - name: 'Download Guardian'
          uses: 'actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e' # ratchet:actions/download-artifact@v4
          with:
            name: 'guardian'
            path: '${{ runner.temp }}/.guardian'

        - name: 'Setup Guardian'
          env:
            INSTALL_PATH: '${{ runner.temp }}/.guardian'
          run: |-
            chmod +x "${INSTALL_PATH}/guardian"
            echo "${INSTALL_PATH}" >> $GITHUB_PATH

        - name: 'Guardian Plan'
          shell: 'bash'
          env:
            DIRECTORY: '${{ matrix.working_directory }}'
            # used to create comments on pull requests (access to only this repo)
            REPO_TOKEN: '${{ github.token }}'
            JOB_NAME: '${{ github.job }} (${{ matrix.working_directory }})'
          run: |-
            guardian plan
