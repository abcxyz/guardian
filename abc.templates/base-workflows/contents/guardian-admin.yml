# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Guardian admin is used to run Terraform commands as the privileged service account.
# Due to the sensitive nature of the access this account has, this workflow is restricted
# to only repository administrators to prevent misuse.
name: 'guardian_admin'
run-name: 'guardian_admin - [${{ inputs.command }}] [${{ inputs.args }}] [${{ inputs.entrypoint }}]'

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'COMMAND - The Terraform command to run along with any arguments, e.g. plan -input=false, apply -auto-approve, etc.'
        required: true
      entrypoint:
        description: 'ENTRYPOINT - The directory to search for all child directories containing Terraform configurations. If left blank, the Terraform command will run for all configured directories.'
        default: 'REPLACE_TERRAFORM_DIRECTORY'
        type: 'string'

permissions:
  contents: 'read'
  id-token: 'write'
  pull-requests: 'read'

# only one admin should run at a time
concurrency:
  group: '${{ github.workflow }}'

env:
  GITHUB_OWNER_NAME: '${{ github.event.repository.owner.login }}'
  GITHUB_REPO_NAME: '${{ github.event.repository.name }}'
  GUARDIAN_VERSION: 'REPLACE_GUARDIAN_VERSION_TAG'
  GUARDIAN_WIF_PROVIDER: 'REPLACE_GUARDIAN_WIF_PROVIDER'
  GUARDIAN_WIF_SERVICE_ACCOUNT: 'REPLACE_GUARDIAN_WIF_SERVICE_ACCOUNT'
  GUARDIAN_TERRAFORM_VERSION: 'REPLACE_TERRAFORM_VERSION'

jobs:
  init:
    runs-on: 'ubuntu-latest'
    outputs:
      directories: '${{ steps.dirs.outputs.directories }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4

      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@e6295e3016161bf062cabbf9b245603652923669' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Guardian Validate Permissions'
        shell: 'bash'
        env:
          # used to get repository user permissions for validation (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian workflows validate-permissions \
          -github-owner="${GITHUB_OWNER_NAME}" \
          -github-repo="${GITHUB_REPO_NAME}" \
          -github-token="${REPO_TOKEN}" \
          -allowed-permissions=admin

      - name: 'Guardian Directories'
        id: 'dirs'
        shell: 'bash'
        env:
          ENTRYPOINT: '${{ inputs.entrypoint }}'
        run: |-
          DIRECTORIES=$(guardian entrypoints -dir="${ENTRYPOINT}" -format=json)
          echo "entrypoints -> ${DIRECTORIES}"
          echo "directories=${DIRECTORIES}" >> $GITHUB_OUTPUT

  admin:
    if: |
      needs.init.outputs.directories != '[]'
    needs:
      - 'init'
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.directories) }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@71fee32a0bb7e97b4d33d548e7d957010649d8fa' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.GUARDIAN_WIF_PROVIDER}}'
          service_account: '${{ env.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup Terraform'
        uses: 'abcxyz/secure-setup-terraform@fa5832adc577578c1dfb422d13722bdeb711cf29' # ratchet:abcxyz/secure-setup-terraform@main
        with:
          terraform_version: '${{ env.GUARDIAN_TERRAFORM_VERSION }}'
          terraform_module_location: './${{ matrix.working_directory }}'
          terraform_lockfile_location: './${{ matrix.working_directory }}'
          protect_lockfile: true
          terraform_wrapper: false

      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@e6295e3016161bf062cabbf9b245603652923669' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Guardian Admin'
        env:
          DIRECTORY: '${{ matrix.working_directory }}'
        shell: 'bash'
        run: |-
          guardian run \
          -dir="${DIRECTORY}" \
          -- ${{ inputs.command }}
