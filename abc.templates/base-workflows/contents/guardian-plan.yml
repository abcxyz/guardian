# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Guardian plan is used to run the Terraform plan commands for a set of
# directories after a pull request has been created.
name: 'guardian_plan'
run-name: 'guardian_plan - [PR #${{ github.event.pull_request.number }}]'

on:
  pull_request_target:
    types:
      - 'opened'
      - 'synchronize'
      - 'reopened'
    branches:
      - 'main'

# only one plan, per pr should run at a time
concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.number }}-${{ github.head_ref || github.ref }}'

env:
  GITHUB_OWNER_NAME: '${{ github.event.repository.owner.login }}'
  GITHUB_REPO_NAME: '${{ github.event.repository.name }}'
  PULL_REQUEST_NUMBER: '${{ github.event.pull_request.number }}'
  GUARDIAN_VERSION: 'REPLACE_GUARDIAN_VERSION_TAG'
  GUARDIAN_WIF_PROVIDER: 'REPLACE_GUARDIAN_WIF_PROVIDER'
  GUARDIAN_WIF_SERVICE_ACCOUNT: 'REPLACE_GUARDIAN_WIF_SERVICE_ACCOUNT'
  GUARDIAN_BUCKET_NAME: 'REPLACE_GUARDIAN_STATE_BUCKET'
  GUARDIAN_TERRAFORM_VERSION: 'REPLACE_TERRAFORM_VERSION'

jobs:
  init:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      pull-requests: 'write'

    outputs:
      directories: '${{ steps.dirs.outputs.directories }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0 # get everything so we can use git diff
          ref: '${{ github.event.pull_request.head.sha }}'

      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@e6295e3016161bf062cabbf9b245603652923669' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Guardian Directories'
        id: 'dirs'
        shell: 'bash'
        env:
          SOURCE_REF: '${{ github.event.pull_request.base.sha }}'
          DEST_REF: '${{ github.event.pull_request.head.sha }}'
        run: |-
          DIRECTORIES=$(guardian entrypoints -dir="REPLACE_TERRAFORM_DIRECTORY" -detect-changes -source-ref="${SOURCE_REF}" -dest-ref="${DEST_REF}" -format=json)
          echo "entrypoints -> ${DIRECTORIES}"
          echo "directories=${DIRECTORIES}" >> $GITHUB_OUTPUT

      - name: 'Guardian Remove Previous Plan Comments'
        shell: 'bash'
        env:
          # used to delete old comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian workflows remove-guardian-comments \
            -github-owner="${GITHUB_OWNER_NAME}" \
            -github-repo="${GITHUB_REPO_NAME}" \
            -github-token="${REPO_TOKEN}" \
            -pull-request-number="${PULL_REQUEST_NUMBER}" \
            -for-command="plan"

  plan:
    name: 'plan (${{ matrix.working_directory }})'
    if: |
      needs.init.outputs.directories != '[]'
    needs:
      - 'init'
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'

    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.directories) }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # ratchet:actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.sha }}'

      # REPLACE_APPROVERS_AGGREGATION
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@71fee32a0bb7e97b4d33d548e7d957010649d8fa' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.GUARDIAN_WIF_PROVIDER }}'
          service_account: '${{ env.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup Terraform'
        uses: 'abcxyz/secure-setup-terraform@fa5832adc577578c1dfb422d13722bdeb711cf29' # ratchet:abcxyz/secure-setup-terraform@main
        with:
          terraform_version: '${{ env.GUARDIAN_TERRAFORM_VERSION }}'
          terraform_module_location: './${{ matrix.working_directory }}'
          terraform_lockfile_location: './${{ matrix.working_directory }}'
          protect_lockfile: true
          terraform_wrapper: false

      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@e6295e3016161bf062cabbf9b245603652923669' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Guardian Plan'
        shell: 'bash'
        env:
          DIRECTORY: '${{ matrix.working_directory }}'
          # used to create comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
          JOB_NAME: '${{ github.job }} (${{ matrix.working_directory }})'
        run: |-
          guardian plan \
          -dir="${DIRECTORY}" \
          -github-owner="${GITHUB_OWNER_NAME}" \
          -github-repo="${GITHUB_REPO_NAME}" \
          -github-token="${REPO_TOKEN}" \
          -pull-request-number="${PULL_REQUEST_NUMBER}" \
          -bucket-name="${GUARDIAN_BUCKET_NAME}" \
          -job-name="${JOB_NAME}"
      # REPLACE_OPA
  plan_success:
    if: '${{ always() }}'
    runs-on: 'ubuntu-latest'
    needs:
      - 'init'
      - 'plan'

    permissions:
      pull-requests: 'write'

    steps:
      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@e6295e3016161bf062cabbf9b245603652923669' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Guardian Post Plan Status'
        shell: 'bash'
        env:
          # used to create comments on pull requests (access to only this repo)
          REPO_TOKEN: '${{ github.token }}'
        run: |-
          guardian workflows plan-status-comment \
          -github-owner="${GITHUB_OWNER_NAME}" \
          -github-repo="${GITHUB_REPO_NAME}" \
          -github-token="${REPO_TOKEN}" \
          -pull-request-number="${PULL_REQUEST_NUMBER}" \
          -init-result="${{ needs.init.result }}" \
          -plan-result="${{ needs.plan.result }}"
