# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Guardian run is used to run Terraform commands as the privileged service account.
# Due to the sensitive nature of the access this account has, this workflow is
# restricted to a set of users defined by Rego policy.
name: 'guardian_run'
run-name: 'guardian_run - [${{ inputs.command }}] [${{ inputs.entrypoint }}]'

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'COMMAND - The Terraform command to run along with any arguments, e.g. plan -input=false, apply -auto-approve, etc.'
        required: true
      entrypoint:
        description: 'ENTRYPOINT - The directory to search for all child directories containing Terraform configurations. If left blank, the Terraform command will run for all configured directories.'
        default: '.'
        type: 'string'
  workflow_call:
    inputs:
      command:
        description: 'COMMAND - The Terraform command to run.'
        required: true
        type: 'string'
        default: 'plan'
      entrypoint:
        description: 'ENTRYPOINT - The directory to search for all child directories containing Terraform configurations. If left blank, the Terraform command will run for all configured directories.'
        default: '.'
        type: 'string'

concurrency:
  group: '${{ github.workflow }}'

env:
  GUARDIAN_VERSION: '1.0.0'
  GUARDIAN_WIF_PROVIDER: 'my-guardian-wif-provider'
  GUARDIAN_WIF_SERVICE_ACCOUNT: 'my-guardian-service-account@abcxyz-my-project.iam.gserviceaccount.com'
  GUARDIAN_TERRAFORM_VERSION: '1.7.4'

jobs:
  init:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'

    outputs:
      directories: '${{ steps.dirs.outputs.directories }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # ratchet:actions/checkout@v4

      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@90acbb7e25e72c3c7ae2c040244d8468f74f8d96' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Create Inputs File'
        shell: 'bash'
        run: |-
          cat << EOF > workflow_dispatch_inputs.json
          {
            "command": "${{ inputs.command }}",
            "entrypoint": "${{ inputs.entrypoint }}"
          }
          EOF

      - name: 'Aggregate Policy Data'
        shell: 'bash'
        env:
          # used to call GitHub API's for data aggregation
          GUARDIAN_GITHUB_TOKEN: '${{ github.token }}'
        run: |-
          guardian policy fetch-data

      - name: 'Setup OPA'
        uses: 'open-policy-agent/setup-opa@34a30e8a924d1b03ce2cf7abe97250bbb1f332b5' # ratchet:open-policy-agent/setup-opa@v2
        with:
          version: 'latest'

      - name: 'Evaluate Policy'
        id: 'opa_eval'
        shell: 'bash'
        run: |-
          DECISION=$(opa eval \
            --format raw \
            --input ./workflow_dispatch_inputs.json \
            --data ./policy/guardian/run \
            --data ./guardian_policy_context.json \
            "data.guardian.run")
          echo "$DECISION" > policy_results.json

      - name: 'Enforce Policy'
        shell: 'bash'
        env:
          GUARDIAN_GITHUB_TOKEN: '${{ github.token }}'
        run: |-
          guardian policy enforce \
            -reporter=none \
            -dir=${DIRECTORY} \
            -results-file=policy_results.json

      - name: 'Guardian Directories'
        id: 'dirs'
        shell: 'bash'
        env:
          ENTRYPOINT: '${{ inputs.entrypoint }}'
          GUARDIAN_GITHUB_TOKEN: '${{ github.token }}'
        run: |-
          DIRECTORIES=$(guardian entrypoints -dir="${ENTRYPOINT}" -reporter=none)
          echo "entrypoints -> ${DIRECTORIES}"
          echo "directories=${DIRECTORIES}" >> $GITHUB_OUTPUT

  run:
    if: |
      needs.init.outputs.directories != '[]'
    needs:
      - 'init'
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        working_directory: '${{ fromJSON(needs.init.outputs.directories) }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # ratchet:actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.GUARDIAN_WIF_PROVIDER}}'
          service_account: '${{ env.GUARDIAN_WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup Terraform'
        uses: 'abcxyz/secure-setup-terraform@cedf5136321da85745811c74c063c19675bfa904' # ratchet:abcxyz/secure-setup-terraform@main
        with:
          terraform_version: '${{ env.GUARDIAN_TERRAFORM_VERSION }}'
          terraform_module_location: './${{ matrix.working_directory }}'
          terraform_lockfile_location: './${{ matrix.working_directory }}'
          protect_lockfile: true
          terraform_wrapper: false

      - name: 'Setup Guardian'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@90acbb7e25e72c3c7ae2c040244d8468f74f8d96' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/abcxyz/guardian/releases/download/v${{ env.GUARDIAN_VERSION }}/guardian_${{ env.GUARDIAN_VERSION }}_linux_amd64.tar.gz'
          install_path: '${{ runner.temp }}/.guardian'
          binary_subpath: 'guardian'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_guardian_${{ env.GUARDIAN_VERSION }}'
          add_to_path: true

      - name: 'Guardian Run'
        env:
          DIRECTORY: '${{ matrix.working_directory }}'
        shell: 'bash'
        run: |-
          guardian run -dir="${DIRECTORY}" -- ${{ inputs.command }}
